<?php

namespace app\models;

//use app\models\rules\NotAdminRule;
use yii\base\Model;
use yii\web\UploadedFile;
use app\models\rules\CorrectTimeRule;
use app\models\rules\CorrectTimeStart;
use app\models\rules\DateTodayPlusRule;


class Activity extends Model
{
    public $title;
    public $use_notification;
    public $description;
    public $is_blocked;
    public $is_repeated;
    public $email;
    public $email_repeat;
    public $images;
    public $imagesNewNames;
    public $timeStart;

// старые данные
//    public $date_start;
//
//
//    /** @var UploadedFile */
//    public $image;
//
//    const SCENARIO_CUSTOM = 'custom_sc';

    public function rules()
    {
        return [
            [['title', 'description', 'timeStart', 'timeEnd', 'dateAct'], 'required'],
            [['is_blocked', 'is_repeated', 'use_notification'], 'boolean'],
            [['images'], 'file', 'extensions' => 'jpg, png', 'maxFiles' => 4],
            ['dateAct', 'date', 'format' => 'php:d-m-Y'],
            [['email', 'email_repeat'], 'email'],

 ['email', 'required', 'when' => function($model){
 return $model->use_notification ? true : false;
 }],
          ['email_repeat', 'compare', 'compareAttribute' => 'email'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'title' => 'Название',
            'dateAct' => 'Дата',
            'timeStart' => 'Время начала',
            'timeEnd' => 'Время окончания',
            'use_notification' => 'Уведомление',
            'images' => 'Прикрепить файлы (макс. 4 шт.)',
            'description' => 'Описание',
            'is_blocked' => 'Блокирующее',
            'is_repeated' => 'Повторяющееся',
        ];
    }

//    public function rules()
//    {
//        return [
//            ['title', 'string', 'max' => 150, 'min' => 2],
//            [['title', 'description'], 'required'],
//            // правило выполнится, если будет выполнен сценарий, объявленный в контроллере
//            ['title', NotAdminRule::class, 'on' => self::SCENARIO_CUSTOM],
////            ['title', 'notAdmin'], // собственная функция, потом вынесли в отдельный класс models\rules\NotAdminRule
//            [['is_blocked', 'is_repeated', 'use_notification' ], 'boolean'],
//            [['email', 'email_repeat'], 'email'],
//            // если пользователь хочет получать уведомления, то поле email - обязательно, иначе - нет
//            ['email', 'required', 'when' => function($model){
//                return $model->use_notification ? true : false;
//            }],
//            ['email_repeat', 'compare', 'compareAttribute' => 'email'],
//            ['date_start', 'date', 'format' => 'php:d-m-Y', 'message' => 'Формат даты должен быть ДД-ММ-ГГГГ'],
//            ['image', 'file', 'extensions' => ['jpg', 'png']],
//        ];
//    }
//
//    public function notAdmin($attribute, $value){
//        if ($this->$attribute == 'admin'){
//            $this->addError($attribute, "Атрибут не может называться " . $this->$attribute);
//        }
//    }
//
//    public function attributeLabels()
//    {
//        return [
//            'title' => 'Заголовок активности',
//            'description' => 'Описание',
//            'is_blocked' => 'Блокирующее',
//            'is_repeated' => 'Повторяющееся',
//            'email' => 'Email',
//            'email_repeat' => 'Повторите Email',
//            'date_start' => 'Дата начала',
//            'use_notification' => 'Использовать уведомление',
//        ];
//    }
//
//    public function beforeValidate()
//    {
//        $this->loadFile();
//        return parent::beforeValidate(); // TODO: Change the autogenerated stub
//    }
//
//    public function loadFile(){
//        /** @var UploadedFile image */
//        $this->image = UploadedFile::getInstance($this, 'image');
//
//    }

}